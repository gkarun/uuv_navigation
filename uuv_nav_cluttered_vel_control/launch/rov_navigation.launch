<?xml version="1.0"?>
<launch>
    <!-- If you want to generate a ROS bag with the recorded simulated data, set this flag to true -->
    <arg name="record" default="false"/>

    <!-- Start the a underwater world simulation scenario -->    
    <include file="$(find uuv_gazebo_worlds)/launch/empty_underwater_world.launch"/>

    <!-- Add the RexROV vehicle to the simulation (namespace: rexrov) -->
    <include file="$(find uuv_descriptions)/launch/upload_rexrov_default.launch">
        <arg name="x" default="20"/>
        <arg name="y" default="20"/>
        <arg name="z" default="-10"/>
        <arg name="yaw" default="0"/>
        <arg name="mode" default="sonar"/>
  	<arg name="use_ned_frame" default="false"/>
    </include>
    
    <!-- Add the obstacle vehicle to the simulation (namespace: rexrov) -->
    <!--include file="$(find uuv_nav_cluttered_vel_control)/launch/box.launch"-->
    <include file="$(find uuv_nav_cluttered_vel_control)/launch/cylinder.launch">
        <arg name="x" default="10"/>
        <arg name="y" default="10"/>
        <arg name="z" default="-25"/>
    </include>
    

    <!-- Start the controller -->
    <include file="$(find uuv_nav_cluttered_vel_control)/launch/velocity_controller.launch">
        <arg name="uuv_name" value="rexrov"/>
        <arg name="model_name" value="rexrov"/>
        <arg name="target_x" default="0"/>
        <arg name="target_y" default="0"/>
        <arg name="target_z" default="-20"/>
    </include>

    <!-- Start the recording node  -->
    <include file="$(find uuv_gazebo)/launch/controller_demos/record_demo.launch">
      <arg name="record" value="$(arg record)"/>
    </include>

    <!-- Open RViz for visualization of sensor data and visualization markers -->
    <node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find uuv_gazebo)/rviz/rexrov_sonar.rviz"/>
    <!--node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find uuv_gazebo)/rviz/controller_demo.rviz"/-->


    <!--
    You can run this demo as

    >> roslaunch uuv_tutorial_dp_controller start_tutorial_dp_controller_demo.launch

    and you can then send some waypoints to the vehicle to see it working

    >> roslaunch uuv_control_utils send_waypoints_file.launch uuv_name:=rexrov
    -->
</launch>
